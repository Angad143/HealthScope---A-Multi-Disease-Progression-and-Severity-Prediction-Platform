from fpdf import FPDF
from datetime import datetime

def generate_diabetes_report(input_data, prediction, age):
    # Create PDF instance with better page management
    pdf = FPDF()
    pdf.set_left_margin(20)  # Shift all text 20 units to the right
    pdf.set_right_margin(20)
    pdf.add_page()
    pdf.set_auto_page_break(auto=True, margin=15)  # Set auto page break with margin
    
    # Set font for the entire document
    pdf.set_font("Arial", size=12)
    
    # Add title
    pdf.set_font("Arial", 'B', 16)
    pdf.cell(170, 10, txt="Diabetes Risk Assessment Report", ln=2, align='C')  # ln=2 for double line break
    pdf.ln(4)  # Reduced spacing
    
    # Add report date
    pdf.set_font("Arial", 'I', 10)
    pdf.cell(170, 8, txt=f"Report generated on: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}", ln=2, align='C')
    pdf.ln(10)
    
    # Prediction result section - more compact
    pdf.set_font("Arial", 'B', 14)
    pdf.cell(200, 8, txt="Prediction Result:", ln=2)
    pdf.set_font("Arial", size=12)
    
    if prediction == 1:
        pdf.set_text_color(220, 53, 69)  # Red color for high risk
        pdf.cell(200, 8, txt="High Risk of Diabetes (Positive)", ln=2)
    else:
        pdf.set_text_color(40, 167, 69)  # Green color for low risk
        pdf.cell(200, 8, txt="Low Risk of Diabetes (Negative)", ln=2)
    
    pdf.set_text_color(0, 0, 0)  # Reset to black
    pdf.ln(8)  # Reduced spacing
    
    # Patient information section - more compact
    pdf.set_font("Arial", 'B', 14)
    pdf.cell(200, 8, txt="Patient Information:", ln=2)
    pdf.set_font("Arial", size=12)
    
    # Convert input data to readable format
    readable_data = {
            "Gender": "Male" if input_data['Gender'] == 1 else "Female",
            "Age": str(age),  # Convert age to string
            "Excessive Urination (Polyuria)": "Yes" if input_data['Polyuria'] == 1 else "No",
            "Excessive Thirst (Polydipsia)": "Yes" if input_data['Polydipsia'] == 1 else "No",
            "Sudden Weight Loss": "Yes" if input_data['Sudden Weight Loss'] == 1 else "No",
            "Muscle Weakness (Partial Paresis)": "Yes" if input_data['Partial Paresis'] == 1 else "No",
            "Hair Loss (Alopecia)": "Yes" if input_data['Alopecia'] == 1 else "No",
            "Mood Swings (Irritability)": "Yes" if input_data['Irritability'] == 1 else "No",
            "Slow Wound Healing": "Yes" if input_data['Delayed Healing'] == 1 else "No",
            "Skin Itching": "Yes" if input_data['Itching'] == 1 else "No"
        }
    
    # More compact table layout
    col_width = 85
    row_height = 8  # Reduced row height
    
    for key, value in readable_data.items():
        if pdf.get_y() + row_height > pdf.page_break_trigger:
            pdf.add_page()
        pdf.cell(col_width, row_height, txt=str(key), border=0)
        pdf.cell(col_width, row_height, txt=str(value), border=0, ln=1)
    
    pdf.ln(10)
    
    # Recommendations section - more compact
    pdf.set_font("Arial", 'B', 14)
    pdf.cell(200, 8, txt="Recommendations:", ln=2)
    pdf.set_font("Arial", size=12)
    
    recommendations = [
        "1. Consult with a healthcare professional immediately",
        "2. Schedule blood glucose tests (Fasting and Postprandial)",
        "3. Monitor your blood sugar levels regularly",
        "4. Engage in regular physical activity (at least 150 minutes per week)",
        "5. Maintain a healthy weight (BMI between 18.5 and 24.9)",
        "6. Follow a balanced diet low in refined sugars and high in fiber",
        "7. Stay hydrated and limit alcohol consumption",
        "8. Quit smoking if you currently smoke",
        "9. Manage stress through relaxation techniques",
        "10. Get regular eye and foot examinations"
    ] if prediction == 1 else [
        "1. Continue with regular health check-ups",
        "2. Maintain a balanced diet with limited processed sugars",
        "3. Engage in regular physical activity (150 mins/week)",
        "4. Monitor your weight and maintain healthy BMI (18.5-24.9)",
        "5. Stay hydrated with water as primary beverage",
        "6. Get sufficient sleep (7-9 hours per night)",
        "7. Manage stress through relaxation techniques",
        "8. Limit alcohol consumption",
        "9. Avoid tobacco products",
        "10. Be aware of diabetes symptoms for early detection"
    ]
    
    for item in recommendations:
        if pdf.get_y() + 8 > pdf.page_break_trigger:
            pdf.add_page()
        pdf.multi_cell(0, 6, txt=item)  # Reduced line height
        pdf.ln(1)  # Reduced spacing between items
    
    pdf.ln(8)
    
    # Disclaimer section - more compact
    if pdf.get_y() + 20 > pdf.page_break_trigger:
        pdf.add_page()
    pdf.set_font("Arial", 'I', 9)  # Smaller font
    pdf.multi_cell(0, 5, txt="Disclaimer: This report is generated by an AI system and is for informational purposes only. It is not a substitute for professional medical advice, diagnosis, or treatment. Always seek the advice of your physician or other qualified health provider with any questions you may have regarding a medical condition.")
    
    # Return the PDF as bytes
    return pdf.output(dest='S').encode('latin1')